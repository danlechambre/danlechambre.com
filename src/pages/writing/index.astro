---
import { getCollection } from "astro:content";
import RootLayout from "../../layouts/RootLayout.astro";
import StandardLayout from "@layouts/StandardLayout.astro";

// We want to collect together 'articles' and 'musings' (tweet-like thought and ideation with no intention to turn it into an article)

// We'll want some form of nav to show just one or the other
// We'll also want 'tag' like nav somewhere
// We'll order chronologically - but that's unimportant to some extent and shouldn't be offered as a navigation method
const articles = await getCollection("articles");
const musings = await getCollection("musings");

const writing = [...articles, ...musings].sort((a, b) =>
  a.data.createdDate > b.data.createdDate ? -1 : 1
);

const getDateString = (isoString: string) => {
  const date = new Date(isoString);

  return date.toLocaleDateString(undefined, {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};
---

<RootLayout>
  <StandardLayout>
    <section class="container">
      {
        writing.map((w) => () => {
          switch (w.collection) {
            case "articles":
              return (
                <article class="article">
                  <a class="linked-header" href={`/writing/${w.id}`}>
                    <h3>{w.data.title}</h3>
                  </a>
                  <p>{w.data.description}</p>
                  <footer>
                    <p>
                      Last updated{" "}
                      <time datetime={w.data.lastUpdatedDate}>
                        {getDateString(w.data.lastUpdatedDate)}
                      </time>
                    </p>
                    <a href={`/writing/${w.id}`}>{"Read more"}</a>
                  </footer>
                </article>
              );
            case "musings":
              return <p class="musing">{w.data.text}</p>;
          }
        })
      }
    </section>
  </StandardLayout>
</RootLayout>

<style>
  .container {
    padding: 1em 0;
  }

  .article {
    margin: 0 1em;
    margin-bottom: 1em;
    padding: 0 0.5rem;
    border: 1px solid rgba(0, 0, 0, 0.5);
  }

  .linked-header {
    display: block;
    text-decoration-skip-ink: auto;
    text-decoration-color: palevioletred;
    color: inherit;
  }

  .musing {
    margin: 0 1em;
    margin-bottom: 1em;
    padding: 1rem;
    font-style: italic;
    text-align: center;
    background-color: aliceblue;
  }
</style>
